// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.1.3 effective-4.2 (swiftlang-1100.0.282.1 clang-1100.0.33.15)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 4.2 -enforce-exclusivity=checked -O -module-name HumanDetect
import CommonCrypto
import CoreMotion
import Foundation
@_exported import HumanDetect
import Sodium
import Swift
import SwiftProtobuf
import UIKit
import UnifyID
extension UnifyID {
  public var humanDetect: HumanDetect {
    get
  }
}
public class HumanDetect {
  public init() throws
  public func startPassiveCapture()
  public func stopPassiveCapture()
  public func getPassive(identifier: Swift.String = "") -> Swift.Result<HumanDetectToken, HumanDetectError>
  public enum Status {
    case running
    case stopped(HumanDetectError?)
  }
  public var passiveStatus: Status {
    get
    }
  @objc deinit
}
public struct HumanDetectToken {
  public let token: Swift.String
  public let timestamp: Foundation.Date
  public let identifier: Swift.String
  public let checksum: Swift.String
}
public enum HumanDetectError : Swift.Error, Foundation.LocalizedError {
  case gyroUnavailable
  case gyroError(Swift.Error)
  case passiveStopped
  case telemetryRequired
  case tokenGenerationFailed
  case insufficientData
  case still
  case tokenEncodingError(reason: Swift.String)
  case doNotDirectlyInitialize
  public var errorDescription: Swift.String? {
    get
  }
}
